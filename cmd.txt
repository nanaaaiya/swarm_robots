# Set up system's locale to use UTF-8 English -> ensure all program (ROS2 & Gazebo)
# speak the same "language" for character encoding
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8

# Update system & install dependencies
sudo apt update && sudo apt upgrade -y
sudo apt install -y curl gnupg lsb-release


# Add the ROS 2 apt repository
sudo apt update && sudo apt install -y software-properties-common gnupg2 curl
curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
     | sudo gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
     http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
     | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS 2 Humble Desktop
sudo apt update
sudo apt install -y ros-humble-desktop

# Source the environment
source /opt/ros/humble/setup.bash

# To make this automatic:
# ~/.bashrc file is a script that runs automatically every time a new terminal is opened
echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
source ~/.bashrc

# Check ROS2 version
echo $ROS_DISTRO

# Install system dependencies
sudo apt install -y python3-colcon-common-extensions \
                    python3-rosdep2 python3-argcomplete
sudo rosdep init
rosdep update


# Setup algorithm/ (only Python)
cd ~/algorithm
python3 -m venv venv_algo
source venv_algo/bin/activate
pip install -r requirement_py.txt
deactivate


# Setup simulation_ws/ (the same goes to slave_ws/) 
cd ~/simulation_ws  
rosdep install --from-paths src --ignore-src -r -y

# Build (open 2 terminals because there are two workspaces) (the same goes to slave_ws/) 
cd ~/projects/repo/simulation_ws
source /opt/ros/humble/setup.bash
colcon build --symlink-install
source install/setup.bash
echo "~/Documents/GitHub/swarm_robot/simulation_ws/install/setup.bash"  >> ~/.bashrc
sudo apt update
sudo apt install -y $(cat requirement_ros.txt)

# Spawn one robot in chosen world
ros2 launch robot_bringup robot_spawn.launch.py world:=src/robot_bringup/worlds/swarm_world.worlds 

# Spawn multiple robots in chosen world (uncomment namespace in description files)
ros2 launch robot_bringup multi_robots_spawn.launch.py use_sim_time:=true   

# Cartographer
# Terminal 1:
ros2 launch cartographer cartographer_launch.py use_sim_time:=true 
# Terminal 2:
ros2 run teleop_twist_keyboard teleop_twist_keyboard 
# Terminal 3:
ros2 run nav2_map_server map_saver_cli -f <map_name>

# Navigation2
# Terminal 1:
ros2 launch robot_bringup robot_spawn.launch.py world:=src/robot_bringup/worlds/swarm_world.worlds 

# Terminal 2:
ros2 launch robot_navigation nav2.launch.py use_sim_time:=true

# Terminal 3:
# One goal:
ros2 action send_goal /navigate_to_pose \
  nav2_msgs/action/NavigateToPose \
  '{"pose": {"header": {"frame_id": "map"}, "pose": {"position": {"x": 1.0, "y": 2.0, "z": 0.0}, "orientation": {"x": 0.0, "y": 0.0, "z": 0.0, "w": 1.0}}}}'

# Multiple goals:
ros2 action send_goal /follow_waypoints \
  nav2_msgs/action/FollowWaypoints \
  '{"poses": [
    {"header":{"frame_id":"map"},"pose":{"position":{"x":1.0,"y":2.0,"z":0.0},"orientation":{"x":0.0,"y":0.0,"z":0.0,"w":1.0}}},
    {"header":{"frame_id":"map"},"pose":{"position":{"x":2.5,"y":1.5,"z":0.0},"orientation":{"x":0.0,"y":0.0,"z":0.707,"w":0.707}}},
    {"header":{"frame_id":"map"},"pose":{"position":{"x":0.0,"y":0.0,"z":0.0},"orientation":{"x":0.0,"y":0.0,"z":0.0,"w":1.0}}}
  ]}'


